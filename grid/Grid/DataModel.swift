//
//  DataModel.swift
//  Grid
//
//  
//

import Foundation

class DataModel {
    var nums: [[Int]] = []
    var qn: [[Int]] = []
   
    var ansarray3D: [[[Int]]] = [
        [[2],[7],[6],[3],[1],[4],[9],[5],[8]],
        [[8],[5],[4],[9],[6],[2],[7],[1],[3]],
        [[9],[1],[3],[8],[7],[5],[2],[6],[4]],
        [[4],[6],[8],[1],[2],[7],[3],[9],[5]],
        [[5],[9],[7],[4],[3],[8],[6],[2],[1]],
        [[1],[3],[2],[5],[9],[6],[4],[8],[7]],
        [[3],[2],[5],[7],[8],[9],[1],[4],[6]],
        [[6],[4],[1],[2],[5],[3],[8],[7],[9]],
        [[7],[8],[9],[6],[4],[1],[5],[3],[2]]
        ]
    
    
    var qnarray3D: [[[Int]]] =
        [
            [[0],[7],[6],[0],[1],[4],[9],[5],[8]],
            [[0],[5],[0],[9],[0],[0],[7],[1],[0]],
            [[9],[0],[0],[0],[7],[5],[0],[6],[4]],
            [[4],[6],[8],[1],[0],[7],[0],[0],[5]],
            [[0],[9],[0],[4],[3],[8],[0],[0],[0]],
            [[1],[0],[0],[5],[9],[0],[4],[8],[7]],
            [[3],[0],[5],[7],[8],[0],[0],[0],[6]],
            [[0],[4],[0],[0],[0],[3],[0],[7],[0]],
            [[7],[8],[9],[6],[4],[0],[5],[3],[0]]
            ]
    
    var refarray: [[[Int]]] =
        [
            [[0],[7],[6],[0],[1],[4],[9],[5],[8]],
            [[0],[5],[0],[9],[0],[0],[7],[1],[0]],
            [[9],[0],[0],[0],[7],[5],[0],[6],[4]],
            [[4],[6],[8],[1],[0],[7],[0],[0],[5]],
            [[0],[9],[0],[4],[3],[8],[0],[0],[0]],
            [[1],[0],[0],[5],[9],[0],[4],[8],[7]],
            [[3],[0],[5],[7],[8],[0],[0],[0],[6]],
            [[0],[4],[0],[0],[0],[3],[0],[7],[0]],
            [[7],[8],[9],[6],[4],[0],[5],[3],[0]]
    ]
    
    
    
    init(numItemsPerRow: Int, initialization: Int) {
        nums = Array(count: numItemsPerRow, repeatedValue: Array(count: numItemsPerRow, repeatedValue: initialization))
    }
    
    func get_num(row:Int, column:Int) -> [Int] {
        return qnarray3D[row][column]
    }
    
    
    func set_num(row:Int, column:Int, value:[Int]){
        if(refarray[row][column] == [0]){
               qnarray3D[row][column] = value
        }
        
    }
    func checkans() -> Bool {
        if(qnarray3D == ansarray3D){
            return true}
        else{
            return false}
    }
    
    
    func reset() -> Void {
        qnarray3D = refarray
    }
    

}